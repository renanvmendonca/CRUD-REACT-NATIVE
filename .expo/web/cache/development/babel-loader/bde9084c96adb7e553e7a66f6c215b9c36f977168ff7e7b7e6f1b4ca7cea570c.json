{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Result from \"./Result\";\nimport mysql from \"mysql2/promise\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    compositor = _useState4[0],\n    setCompositor = _useState4[1];\n  var _useState5 = useState(\"Preencha as informações do CD\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(\"Cadastrar\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    textButton = _useState8[0],\n    setTextButton = _useState8[1];\n  var cadastrarCd = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var connection = yield mysql.createConnection({\n          host: \"localhost\",\n          user: \"root\",\n          password: \"\",\n          database: \"vinly\"\n        });\n        var query = \"INSERT INTO cds (nome, compositor) VALUES (?, ?)\";\n        var values = [nome, compositor];\n        yield connection.execute(query, values);\n        yield connection.end();\n        Alert.alert(\"Cadastro\", \"CD de vinil cadastrado com sucesso\");\n      } catch (error) {\n        console.error(\"Erro ao cadastrar o Vinil:\", error);\n      }\n    });\n    return function cadastrarCd() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  function validation() {\n    if (nome && compositor) {\n      cadastrarCd();\n      setNome(null);\n      setCompositor(null);\n      setTextButton(\"Cadastro finalizado\");\n      return;\n    }\n    setTextButton(\"Cadastrar\");\n    setMessage(\"Preencha no mínimo as informações: Nome do CD e o compositor\");\n  }\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: styles.topo,\n      children: _jsx(Text, {\n        style: styles.topoTitulo,\n        children: \"Toca do Vinil\"\n      })\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.Textt,\n        children: \"Nome do CD:\"\n      }), _jsx(TextInput, {\n        style: styles.TextInputt,\n        onChangeText: setNome,\n        value: nome,\n        keyboardType: \"text\"\n      }), _jsx(TextInput, {\n        style: styles.TextInputt,\n        onChangeText: setCompositor,\n        value: compositor,\n        keyboardType: \"text\"\n      }), _jsx(Button, {\n        title: textButton,\n        onPress: validation\n      })]\n    }), _jsx(Result, {\n      messageResult: message\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    marginLeft: 30,\n    marginRight: 30,\n    borderWidth: 1,\n    borderColor: \"#d5d5d5\",\n    borderRadius: 4,\n    marginBottom: 10,\n    marginHorizontal: 20,\n    padding: 10,\n    backgroundColor: \"#fafafa\"\n  },\n  Textt: {\n    fontSize: 15,\n    color: \"#363636\"\n  },\n  TextInputt: {\n    backgroundColor: \"#DCDCDC\",\n    borderRadius: 4,\n    marginBottom: 15,\n    color: \"#4F4F4F\",\n    paddingLeft: 10\n  },\n  TextTitle: {\n    fontSize: 22,\n    marginTop: 25,\n    textAlign: \"center\",\n    color: \"black\",\n    backgroundColor: \"white\",\n    marginLeft: 80,\n    marginRight: 80,\n    borderRadius: 5\n  },\n  topo: {\n    height: 80,\n    padding: 20,\n    paddingTop: 40,\n    marginBottom: 20,\n    backgroundColor: \"#00008B\"\n  },\n  topoTitulo: {\n    fontSize: 22,\n    marginBottom: -10,\n    color: \"#fff\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","ScrollView","Alert","Button","TextInput","StyleSheet","Result","mysql","jsx","_jsx","jsxs","_jsxs","Form","_useState","_useState2","_slicedToArray","nome","setNome","_useState3","_useState4","compositor","setCompositor","_useState5","_useState6","message","setMessage","_useState7","_useState8","textButton","setTextButton","cadastrarCd","_ref","_asyncToGenerator","connection","createConnection","host","user","password","database","query","values","execute","end","alert","error","console","apply","arguments","validation","children","style","styles","topo","topoTitulo","container","Textt","TextInputt","onChangeText","value","keyboardType","title","onPress","messageResult","create","marginTop","marginLeft","marginRight","borderWidth","borderColor","borderRadius","marginBottom","marginHorizontal","padding","backgroundColor","fontSize","color","paddingLeft","TextTitle","textAlign","height","paddingTop"],"sources":["C:/Users/PC/Downloads/native/ReactNative---Toca do Vinil/src/components/Criar/Form/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, ScrollView, Alert, Button, TextInput, StyleSheet } from \"react-native\";\r\nimport Result from \"./Result\";\r\nimport mysql from \"mysql2/promise\";\r\n\r\nexport default function Form() {\r\n  const [nome, setNome] = useState(null);\r\n  const [compositor, setCompositor] = useState(null);\r\n  const [message, setMessage] = useState(\"Preencha as informações do CD\");\r\n  const [textButton, setTextButton] = useState(\"Cadastrar\");\r\n\r\n  const cadastrarCd = async () => {\r\n    try {\r\n      const connection = await mysql.createConnection({\r\n        host: \"localhost\",\r\n        user: \"root\",\r\n        password: \"\",\r\n        database: \"vinly\",\r\n      });\r\n\r\n      const query = `INSERT INTO cds (nome, compositor) VALUES (?, ?)`;\r\n      const values = [nome, compositor];\r\n      await connection.execute(query, values);\r\n\r\n      await connection.end();\r\n\r\n      Alert.alert(\"Cadastro\", \"CD de vinil cadastrado com sucesso\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao cadastrar o Vinil:\", error);\r\n    }\r\n  };\r\n\r\n  function validation() {\r\n    if (nome && compositor) {\r\n      cadastrarCd();\r\n      setNome(null);\r\n      setCompositor(null);\r\n      setTextButton(\"Cadastro finalizado\");\r\n      return;\r\n    }\r\n    setTextButton(\"Cadastrar\");\r\n    setMessage(\"Preencha no mínimo as informações: Nome do CD e o compositor\");\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.topo}>\r\n        <Text style={styles.topoTitulo}>Toca do Vinil</Text>\r\n      </View>\r\n      <View style={styles.container}>\r\n        <Text style={styles.Textt}>Nome do CD:</Text>\r\n        <TextInput\r\n  style={styles.TextInputt}\r\n  onChangeText={setNome} // Corrigido\r\n  value={nome}\r\n  // placeholder=\"Ex. 1.70\"\r\n  keyboardType=\"text\"\r\n/>\r\n\r\n<TextInput\r\n  style={styles.TextInputt}\r\n  onChangeText={setCompositor} // Corrigido\r\n  value={compositor}\r\n  ////placeholder=\"Ex. 60.30\"\r\n  keyboardType=\"text\"\r\n/>\r\n\r\n\r\n        <Button title={textButton} onPress={validation} />\r\n      </View>\r\n\r\n      <Result messageResult={message} />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n    borderWidth: 1,\r\n    borderColor: \"#d5d5d5\",\r\n    borderRadius: 4,\r\n    marginBottom: 10,\r\n    marginHorizontal: 20,\r\n    padding: 10,\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n  Textt: {\r\n    fontSize: 15,\r\n    color: \"#363636\",\r\n  },\r\n  TextInputt: {\r\n    backgroundColor: \"#DCDCDC\",\r\n    borderRadius: 4,\r\n    marginBottom: 15,\r\n    color: \"#4F4F4F\",\r\n    paddingLeft: 10,\r\n  },\r\n  TextTitle: {\r\n    fontSize: 22,\r\n    marginTop: 25,\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n    marginLeft: 80,\r\n    marginRight: 80,\r\n    borderRadius: 5,\r\n  },\r\n  topo: {\r\n    height: 80,\r\n    padding: 20,\r\n    paddingTop: 40,\r\n    marginBottom: 20,\r\n    backgroundColor: \"#00008B\",\r\n  },\r\n  topoTitulo: {\r\n    fontSize: 22,\r\n    marginBottom: -10,\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}